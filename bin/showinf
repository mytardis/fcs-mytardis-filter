#!/usr/bin/env python
"""
Usage: showinf in_file.fcs
Author: James Wettenhall <james.wettenhall@monash.edu>
"""
import sys
import array
import re
import json
from rpy2.robjects.packages import importr
from rpy2.robjects import StrVector
import rpy2.robjects as robjects

if len(sys.argv) < 2:
    print "Usage: showinf in_file.fcs"
    sys.exit(1)

base = importr('base')
flowCore = importr('flowCore')

getmethod = robjects.baseenv.get("getMethod")

descriptionMethod = \
    getmethod("description",
              signature=StrVector(["flowFrame", ]),
              where="package:flowCore")

exprsMethod = \
    getmethod("exprs",
              signature=StrVector(["flowFrame", ]),
              where="package:flowCore")

flowSet = flowCore.read_flowSet(files=sys.argv[1], emptyValue=False,
                                ignore_text_offset=True)
frameName = base.ls(envir=flowSet.do_slot("frames"))
flowFrame = base.get(frameName, envir=flowSet.do_slot("frames"))

print ""

thead = [
    {"$PnN": "Parameter\n($PnN)"},
    {"$PnS": "Stain\n($PnS)"}]

# description = descriptionMethod(flowFrame, hideInternal=True)
description = descriptionMethod(flowFrame)
tbody = []
channels = base.colnames(exprsMethod(flowFrame))
for channel in channels:
    tbody.append({})

filename = None
date = None
cytometer = None
total = None
for i in range(0, len(description)):
    if description.names[i] == "$FIL":
        filename = description[i][0]
    elif description.names[i] == "$DATE":
        date = description[i][0]
    elif description.names[i] == "$CYT":
        cytometer = description[i][0]
    elif description.names[i] == "$TOT":
        total = description[i][0]
    for j in range(1, len(channels) + 1):
        if re.match("\\$P%d[NS]" % j, description.names[i]):
            tbody[j-1]["$Pn" + description.names[i].lstrip("$P%d" % j)] = \
                description[i][0]

# Remove channels which are not properly labeled:

tbody = [channel for channel in tbody if '$PnS' in channel]

if filename is not None:
    print "File: %s" % filename
if date is not None:
    print "Date: %s" % date
if cytometer is not None:
    print "Cytometer: %s" % cytometer
if total is not None:
    print "# Cells: %s" % total

print ""
print "<ParametersAndStains>"
print json.dumps({'thead': thead, 'tbody': tbody}, indent=2)
print "</ParametersAndStains>"
print ""
